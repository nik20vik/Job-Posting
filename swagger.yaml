openapi: 3.0.0
info:
  title: Jobs API
  description: ""
  contact: {}
  version: "1.0"
servers:
  - url: https://jobs-api-41di.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      description: ""
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterUserRequest"
                - example:
                    name: user2
                    email: user2@gmail.com
                    password: password2
            example:
              name: user2
              email: user2@gmail.com
              password: password2
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
      servers:
        - url: https://jobs-api-41di.onrender.com/api/v1
          variables: {}
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      description: ""
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginUserRequest"
                - example:
                    email: user2@gmail.com
                    password: password2
            example:
              email: user2@gmail.com
              password: password2
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
      servers:
        - url: https://jobs-api-41di.onrender.com/api/v1
          variables: {}
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      description: ""
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"
                - example:
                    company: meta
                    position: marketing director
            example:
              company: meta
              position: marketing director
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security:
        - bearer: []
      servers:
        - url: https://jobs-api-41di.onrender.com/api/v1
          variables: {}
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      description: ""
      operationId: GetAllJobs
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        "200":
          description: ""
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security:
        - bearer: []
      servers:
        - url: https://jobs-api-41di.onrender.com/api/v1
          variables: {}
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The Job ID
    get:
      tags:
        - Jobs
      summary: Get Single Job
      description: ""
      operationId: GetSingleJob
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        "200":
          description: ""
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security:
        - bearer: []
      servers:
        - url: https://jobs-api-41di.onrender.com/api/v1
          variables: {}
    patch:
      tags:
        - Jobs
      summary: Update Single Job
      description: ""
      operationId: UpdateSingleJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateSingleJobRequest"
                - example:
                    company: amazon
                    position: software engineer
            example:
              company: amazon
              position: software engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security:
        - bearer: []
      servers:
        - url: https://jobs-api-41di.onrender.com/api/v1
          variables: {}
    delete:
      tags:
        - Jobs
      summary: Delete Single Job
      description: ""
      operationId: DeleteSingleJob
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          schema:
            enum:
              - application/json
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security:
        - bearer: []
      servers:
        - url: https://jobs-api-41di.onrender.com/api/v1
          variables: {}
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: user2
        email: user2@gmail.com
        password: password2
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: user2@gmail.com
        password: password2
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: meta
        position: marketing director
    UpdateSingleJobRequest:
      title: UpdateSingleJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: amazon
        position: software engineer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
